// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Text$BsReactNative = require("bs-react-native/lib/js/src/components/text.js");
var View$BsReactNative = require("bs-react-native/lib/js/src/components/view.js");
var Style$BsReactNative = require("bs-react-native/lib/js/src/style.js");
var Button$BsReactNative = require("bs-react-native/lib/js/src/components/button.js");
var StyleSheet$BsReactNative = require("bs-react-native/lib/js/src/styleSheet.js");

var styles = StyleSheet$BsReactNative.create({
      container: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.flex(1),
            /* :: */[
              Style$BsReactNative.justifyContent(/* Center */2),
              /* :: */[
                Style$BsReactNative.alignItems(/* Center */2),
                /* :: */[
                  Style$BsReactNative.backgroundColor(/* String */Block.__(0, ["#F5FCFF"])),
                  /* [] */0
                ]
              ]
            ]
          ]),
      welcome: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.fontSize(/* Float */Block.__(0, [20])),
            /* :: */[
              Style$BsReactNative.textAlign(/* Center */3),
              /* :: */[
                Style$BsReactNative.margin(/* Pt */Block.__(0, [10])),
                /* [] */0
              ]
            ]
          ]),
      instructions: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.textAlign(/* Center */3),
            /* :: */[
              Style$BsReactNative.color(/* String */Block.__(0, ["#333333"])),
              /* :: */[
                Style$BsReactNative.marginBottom(/* Pt */Block.__(0, [5])),
                /* [] */0
              ]
            ]
          ])
    });

var Styles = /* module */[/* styles */styles];

var component = ReasonReact.reducerComponent("LocalCounter");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              return ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                              ReasonReact.element(undefined, undefined, Button$BsReactNative.make(undefined, undefined, undefined, (function (param) {
                                            return Curry._1(send, /* Incr */0);
                                          }), undefined, "+")(/* array */[])),
                              ReasonReact.element(undefined, undefined, Button$BsReactNative.make(undefined, undefined, undefined, (function (param) {
                                            return Curry._1(send, /* Decr */1);
                                          }), undefined, "-")(/* array */[])),
                              ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[" counter:" + String(param[/* state */1])]))
                            ]));
            }),
          /* initialState */(function (param) {
              return 0;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [state - 1 | 0]);
              } else {
                return /* Update */Block.__(0, [state + 1 | 0]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var LocalCounter = /* module */[
  /* component */component,
  /* make */make
];

function app(param) {
  return ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(styles.container), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                  ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(styles.welcome), undefined, undefined, undefined, undefined, undefined, undefined, "Let's get this party started!!!", /* array */[])),
                  ReasonReact.element(undefined, undefined, make(/* array */[]))
                ]));
}

exports.Styles = Styles;
exports.LocalCounter = LocalCounter;
exports.app = app;
/* styles Not a pure module */
